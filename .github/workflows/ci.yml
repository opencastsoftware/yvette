name: CI

on:
  push:
  pull_request:

env:
  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.PGP_SECRET }}
  ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PGP_PASSPHRASE }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3

      - name: Download Java JDK
        uses: typelevel/download-java@817e8c0d48dc2e88e155a8e4f69ba493bef621be # v2
        id: download-java
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java JDK
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java.outputs.jdkFile }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3

      - name: Build & Test
        run: ./gradlew build --info

      - name: Upload Coverage Report
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish Test Results
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4
        if: always()
        with:
          name: test-results
          path: '**/build/test-results/*/TEST-*.xml'

      - name: Publish To Sonatype
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: ./gradlew publishAllPublicationsToMavenCentral
